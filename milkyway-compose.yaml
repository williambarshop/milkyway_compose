version: "3.1"

services:
  milkyway-galaxy:
    image: wbarshop/milkyway_galaxy:latest
    volumes:
      - galaxy_storage:/export/
    ports:
      - "80:80"
      - "21:21"
      - "8800:8800"
      - "9002:9002"
    networks:
        milkynet:
            aliases:
                - milkyway-galaxy
#        external:
#            aliases:
#                - milkyway-galaxy
    environment:
        - GALAXY_CONFIG_ADMIN_USERS=admin@galaxy.org
        - GALAXY_CONFIG_MASTER_API_KEY=37430b18a3e4610ea243c316b293d06f
        - GALAXY_CONFIG_REQUIRE_LOGIN=True
        - GALAXY_CONFIG_HOST='0.0.0.0'
        - GALAXY_DESTINATIONS_DEFAULT=local
        - GALAXY_LOGGING=full
        - GALAXY_DOCKER_ENABLED=True
        - NONUSE=slurmd,slurmctld
    deploy:
      placement:
        constraints: [node.labels.ostype != windows]
#        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 6
        window: 240s
      # service update configuration
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
  

  milkyway-pulsar:
    image: wbarshop/milkyway_pulsar:latest
#    volumes:
#     - pulsar_storage:C:\pulsar\files\staging\
    networks:
        milkynet:
            aliases:
                - milkyway-pulsar
    deploy:
      placement:
        constraints: [node.labels.ostype == windows]
#            - engine.labels.operatingsystem==windows
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 6
        window: 240s
      # service update configuration
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
        
  milkyway-shiny:
    image: wbarshop/milkyway_shiny
    ports:
      - "3838:3838"
    networks:
        milkynet:
            aliases:
                - milkyway-shiny
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.ostype != windows]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 6
        window: 240s
      # service update configuration
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3

#  milkyway-smb: ############################################ SMB is no longer needed!
#    image: brispark/smb:latest
#    ports:
#      - "137:137"
#      - "138:138"
#      - "139:139"
#      - "445:445"
#    volumes:
#      - smb_storage:/home/app
#    networks:
#        milkynet:
#            aliases:
#                - milkyway-smb

#    deploy:
#      placement:
#        constraints: [node.labels.ostype != windows]
#      restart_policy:
#        condition: on-failure
#        delay: 30s
#        max_attempts: 6
#        window: 240s
#      # service update configuration
#      update_config:
#        parallelism: 1
#        delay: 10s
#        failure_action: continue
#        monitor: 60s
#        max_failure_ratio: 0.3


##### NOTE: Unfortunately, shinyproxy docker-in-docker won't work on swarm.  Docker-in-docker requires privileged session, which isn't supported on swarm.  But... you can still run it separately, if you want!
#  milkyway-shinyproxy:
#    image: wbarshop/milkyway_shinyproxy
#    ports:
#      - "8080:8080"
#      - "2375:2375"
#    networks:
#        milkynet:
#            aliases:
#                - milkyway-shinyproxy
##        external:
##            aliases:
##                -milkyway_shinyproxy
#    deploy:
#      privileged: true
#      placement:
#        constraints: [node.labels.ostype != windows]
#      restart_policy:
#        condition: on-failure
#        delay: 30s
#        max_attempts: 6
#        window: 240s
#      # service update configuration
#      update_config:
#        parallelism: 1
#        delay: 10s
#        failure_action: continue
#        monitor: 60s
#        max_failure_ratio: 0.3

networks:
    milkynet:
        driver: overlay
        ipam:
            driver: default
            config:
                - subnet: 172.16.254.0/24
#        internal: true

#    external:
#        driver: bridge

volumes:
    galaxy_storage:
#    smb_storage:
#    galaxy_storage:
#        driver:local
#        driver_opts:
#            type: nfs
#        - galaxy_storage/:/export/           




